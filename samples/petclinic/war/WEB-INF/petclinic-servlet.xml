<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

	<!-- ========================= MAPPING DEFINITIONS ========================= -->

	<!--
	  - Explicit view mappings in bundle instead of default InternalResourceViewResolver.
	  - Fetches the view mappings from localized "views_xx" classpath files, i.e.
	  - "/WEB-INF/classes/views.properties" or "/WEB-INF/classes/views_de.properties".
	  -
	  - Symbolic view names returned by controllers will be resolved in the respective
	  - properties file, allowing for arbitrary mappings between names and resources.
	  -->
	<bean id="viewResolver" class="com.interface21.web.servlet.view.ResourceBundleViewResolver">			
		<property name="basename"><value>views</value></property>
	</bean>

	<!--
	 - Explicit URL handler mapping instead of default BeanNameUrlHandlerMapping.
	 -->
  <bean id="urlMapping" class="com.interface21.web.servlet.handler.SimpleUrlHandlerMapping"> 
		<property name="mappings">
			<props>
				<prop key="/welcome.htm">clinicController</prop>
				<prop key="/vets.htm">clinicController</prop>
				<prop key="/owner.htm">clinicController</prop>
				<prop key="/findOwners.htm">findOwnersForm</prop>
				<prop key="/editOwner.htm">editOwnerForm</prop>
				<prop key="/addOwner.htm">addOwnerForm</prop>
				<prop key="/addVisit.htm">addVisitForm</prop>
				<prop key="/addPet.htm">addPetForm</prop>
				<prop key="/editPet.htm">editPetForm</prop>
			</props>
		</property>
  </bean>
  
	<!-- ========================= CONTROLLER DEFINITIONS ========================= -->

	<!--
	  - Method name resolver definition for MultiActionControllers,
	  - mapping certain URLs to certain methods of the controller class.
	  -->
  <bean id="clinicControllerMethodNameResolver" class="com.interface21.web.servlet.mvc.multiaction.PropertiesMethodNameResolver">
    <property name="mappings">
			<props>
				<prop key="/welcome.htm">welcomeHandler</prop>
				<prop key="/vets.htm">vetsHandler</prop>
				<prop key="/owner.htm">ownerHandler</prop>
			</props>
    </property>
  </bean>

	<!--
	  - MultiActionController implementation
	  - (according to the URL handler mapping definition above).
	  - Uses the MethodNameResolver definition defined above.
	  -->
  <bean id="clinicController" class="petclinic.web.ClinicController">
    <property name="methodNameResolver"><ref bean="clinicControllerMethodNameResolver"/></property>
    <property name="clinic"><ref external="clinic"/></property>
   </bean>

	<!--
	  - Validator for findOwnersForm, implementing Spring's Validator interface.
	  - Could also be defined in the root application context, if generic enough.
	  -->
	<bean id="findOwnersValidator" class="petclinic.validation.FindOwnersValidator"/>

	<!-- 
	  - SimpleFormController findOwnersForm
	  - Uses the findOwnersValidator defined above.
	  -->
	<bean id="findOwnersForm" class="petclinic.web.FindOwnersForm">
		<property name="formView"><value>findOwnersForm</value></property>
		<property name="selectView"><value>selectOwnerView</value></property>
		<property name="successView"><value>ownerRedirect</value></property>
		<property name="validator"><ref bean="findOwnersValidator"/></property>
    <property name="clinic"><ref external="clinic"/></property>
	</bean>
	
	<!-- Validator for ownerForm, implementing Spring's Validator interface. -->
	<bean id="ownerValidator" class="petclinic.validation.OwnerValidator"/>

	<!-- 
	  - SimpleFormController addOwnerForm
	  - Uses the ownerValidator defined above.
	  -->
  <bean id="addOwnerForm" class="petclinic.web.AddOwnerForm">
		<property name="sessionForm"><value>true</value></property>
		<property name="formView"><value>ownerForm</value></property>
		<property name="successView"><value>ownerRedirect</value></property>
		<property name="validator"><ref bean="ownerValidator"/></property>
    <property name="clinic"><ref external="clinic"/></property>
	</bean>
	
	<!-- 
	  - SimpleFormController addOwnerForm
	  - Uses the ownerValidator defined above.
	  -->
  <bean id="editOwnerForm" class="petclinic.web.EditOwnerForm">
		<property name="sessionForm"><value>true</value></property>
		<property name="bindOnNewForm"><value>true</value></property>
		<property name="formView"><value>ownerForm</value></property>
		<property name="successView"><value>ownerRedirect</value></property>
		<property name="validator"><ref bean="ownerValidator"/></property>
    <property name="clinic"><ref external="clinic"/></property>
	</bean>
	
	<!-- Validator for petForm, implementing Spring's Validator interface. -->
	<bean id="petValidator" class="petclinic.validation.PetValidator"/>
  
	<!-- 
	  - SimpleFormController addPetForm.
	  - Uses the petValidator defined above.
	  -->
	<bean id="addPetForm" class="petclinic.web.AddPetForm">
		<property name="sessionForm"><value>true</value></property>
		<property name="formView"><value>petForm</value></property>
		<property name="successView"><value>ownerRedirect</value></property>
		<property name="validator"><ref bean="petValidator"/></property>
    <property name="clinic"><ref external="clinic"/></property>
	</bean>
	
	<!-- 
	  - SimpleFormController editPetForm.
	  - Uses the petValidator defined above.
	  -->
	<bean id="editPetForm" class="petclinic.web.EditPetForm">
		<property name="sessionForm"><value>true</value></property>
		<property name="bindOnNewForm"><value>true</value></property>
		<property name="formView"><value>petForm</value></property>
		<property name="successView"><value>ownerRedirect</value></property>
		<property name="validator"><ref bean="petValidator"/></property>
    <property name="clinic"><ref external="clinic"/></property>
	</bean>
	
	<!-- Validator for visitForm, implementing Spring's Validator interface. -->
	<bean id="visitValidator" class="petclinic.validation.VisitValidator"/>
  
	<!-- 
	  - SimpleFormController addVisitForm.
	  - Uses the visitValidator defined above.
	  -->
	<bean id="addVisitForm" class="petclinic.web.AddVisitForm">
		<property name="sessionForm"><value>true</value></property>
		<property name="formView"><value>visitForm</value></property>
		<property name="successView"><value>ownerRedirect</value></property>
		<property name="validator"><ref bean="visitValidator"/></property>
    <property name="clinic"><ref external="clinic"/></property>
	</bean>
	
</beans>
