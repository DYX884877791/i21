<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
  - Root application context definition for a web app that uses JDBC.
  -
  - Does not depend on web infrastructure or any web-specific classes!
  - Assumes running in a J2EE environment in the "dataSource" definition, as
  - it looks for a "java:comp/env/jdbc/myds" JNDI DataSource, but that can be
  - replaced easily (as noted). Such a context definition can thus be reused
  - in test environments or standalone applications without any hassle.
  -->
  
	<beans>		

	<!-- ========================= GENERAL DEFINITIONS ========================= -->

	<!--
	  - The message source for this context, loaded from localized "messages_xx" files
	  - in the classpath, i.e. "/WEB-INF/classes/messages.properties" or
	  - "/WEB-INF/classes/messages_fr.properties".
	  -
	  - "getMessage" calls to this context will use this source.
	  - Child contexts can have their own message sources, inheriting all messages from this
	  - source, being able to define new messages and override ones defined in this source.
	  -->
	<bean id="messageSource" class="com.interface21.context.support.ResourceBundleMessageSource">	
		<property name="basename"><value>messages</value></property>										
	</bean>

	<bean id="localeResolver" class="com.interface21.web.servlet.i18n.CookieLocaleResolver"/>

	<bean id="themeResolver" class="com.interface21.web.servlet.theme.CookieThemeResolver"/>

	<!-- ===========================================================-->
	<!-- Interceptors												-->
	<!-- ===========================================================-->
	<bean id="localeChangeInterceptor" 
		class="com.interface21.web.servlet.i18n.LocaleChangeInterceptor"/>
	<bean id="themeChangeInterceptor" 
		class="com.interface21.web.servlet.theme.ThemeChangeInterceptor"/>


	<!-- ========================= Start of PERSISTENCE DEFINITIONS ========================= -->
	<!-- If another database as MySql is used, replace DaoCountryJdbcMySql by DaoCountryJdbcXXX.
	     Only the method initBase has normally to be redefined. Its work is to create the table 
	     holding the countries as the database or instance has to preexist for having a working 
	     connection.
		 -->
		      
	<!-- ====================== In memory only version ====================== -->
	
	<bean id="daoCountry" class="com.interface21.samples.countries.dao.DaoCountryMem"
		singleton="true"/>
	
	<!-- ======================= Database only version ====================== -->

	<!--
	<bean id="dataSource" class="com.interface21.jndi.JndiObjectFactoryBean">
		<property name="jndiName"><value>jdbc/countries-ds</value></property>
	</bean>
	<bean id="daoCountry" class="com.interface21.samples.countries.dao.DaoCountryJdbcMySql"
		singleton="true">
		<property name="dataSource"><ref bean="dataSource"/></property>
	</bean>
	-->

	<!-- ============= In memory + Database version for copying ============= -->
	<!--
	<bean id="daoCountry" class="com.interface21.samples.countries.dao.DaoCountryMem"
		singleton="true"/>
	<bean id="dataSource" class="com.interface21.jndi.JndiObjectFactoryBean">
		<property name="jndiName"><value>jdbc/countries-ds</value></property>
	</bean>
	<bean id="secondDaoCountry" class="com.interface21.samples.countries.dao.DaoCountryJdbcMySql"
		singleton="true">
		<property name="dataSource"><ref bean="dataSource"/></property>
	</bean>
	-->
	<!-- ========================= End of PERSISTENCE DEFINITIONS ========================= -->
	
</beans>
